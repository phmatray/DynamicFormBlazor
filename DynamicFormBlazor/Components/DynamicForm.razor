@using DynamicFormBlazor.Models

<EditForm Model="@Model" OnValidSubmit="HandleValidSubmit">
  <MudPaper Class="pa-4">
    @foreach (var field in Fields)
    {
      <div class="mb-4">
        @field.RenderFragment(Model)
      </div>
    }
    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">
      Submit
    </MudButton>
  </MudPaper>
</EditForm>

@code {
  [Parameter] public List<FieldDefinition> Fields { get; set; } = [];
  [Parameter] public EventCallback<Dictionary<string, object>> OnSubmit { get; set; }

  private Dictionary<string, object> Model { get; set; } = new();

  protected override void OnInitialized()
  {
    foreach (var field in Fields)
      Model[field.Key] = field.DefaultValue!;
  }

  private async Task HandleValidSubmit()
  {
    await OnSubmit.InvokeAsync(Model);
  }

}
