@using Microsoft.JSInterop
@namespace FormCraft.ForMudBlazor
@typeparam TModel where TModel : new()
@inject IFieldRendererService FieldRendererService
@inject IJSRuntime JSRuntime

<EditForm Model="@Model" OnValidSubmit="@OnSubmit">
    <DataAnnotationsValidator />
    <DynamicFormValidator TModel="TModel" Configuration="@Configuration" />
    
    @foreach (var field in Configuration.Fields.OrderBy(f => f.Order))
    {
        if (ShouldShowField(field))
        {
            <div class="mb-4">
                @RenderField(field)
                <FieldValidationMessage FieldName="@field.FieldName" />
            </div>
        }
    }
    
    @if (ShowSubmitButton)
    {
        <MudButton ButtonType="ButtonType.Submit"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   Class="@SubmitButtonClass"
                   Disabled="@IsSubmitting">
            @(IsSubmitting ? SubmittingText : SubmitButtonText)
        </MudButton>
    }
</EditForm>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Disable browser validation using JavaScript
            await JSRuntime.InvokeVoidAsync("eval", "document.querySelector('form')?.setAttribute('novalidate', 'novalidate')");
        }
    }
}